<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
          http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- 配置连接池druid -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
		<property name="targetDataSource">
			<bean class="com.alibaba.druid.pool.DruidDataSource">
				<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:ORCL" />
				<property name="username" value="his" />
				<property name="password" value="his" />
				<!-- 配置初始化大小、最小、最大 -->
				<property name="initialSize" value="5" />
				<property name="minIdle" value="10" />
				<property name="maxActive" value="30" />

				<!-- 配置获取连接等待超时的时间 -->
				<property name="maxWait" value="60000" />

				<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
				<property name="timeBetweenEvictionRunsMillis" value="60000" />

				<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
				<property name="minEvictableIdleTimeMillis" value="300000" />

				<property name="testWhileIdle" value="false" />
				<property name="testOnBorrow" value="false" />
				<property name="testOnReturn" value="false" />

				<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
				<property name="poolPreparedStatements" value="false" />
				<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
				<property name="defaultAutoCommit" value="true" />
				<property name="ValidationQueryTimeout" value="60000" />
				<property name="validationQuery" value="SELECT 1 FROM DUAL" />
			</bean>
		</property>
	</bean>
<!--  	<bean class="com.ssh.utils.AllExecptionHander"></bean> -->
	<!-- MyBatis -->
	<!-- SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 指定Mybatis核心配置文件地址 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- 自动扫描mapping.xml文件,注意这里的classpath后面的*是必须的 -->
		<property name="mapperLocations" value="classpath*:mapper/*.xml" />
		<!-- pojo所在包 -->
		<property name="typeAliasesPackage" value="com.ssh.pojos" />
		<!-- 整合PageHelper分页插件 -->
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=oracle
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>

	<!-- MapperScannerConfigurer -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定Session工厂 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<!-- 指定需要自动扫描的DAO所在的包 -->
		<property name="basePackage" value="com.ssh.dao.mybatis"></property>
	</bean>

	<!-- MyBatis事务 -->
	<bean id="transactionManager_mybatis"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- JPA -->
	<bean id="entityManagerFactory" 
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 定义DAO所在的包，以便自动扫描 -->
	<jpa:repositories base-package="com.ssh.dao.jpa"></jpa:repositories>

	<!-- 配置jpa事务管理器 -->
	<bean id="transactionManager" 
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" 
			ref="entityManagerFactory"></property>	
	</bean>
	
	<!-- JPA的事务管理器 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<!-- MyBatis的事务管理器 -->
	<tx:annotation-driven transaction-manager="transactionManager_mybatis" />


</beans>